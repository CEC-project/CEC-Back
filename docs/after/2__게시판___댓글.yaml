openapi: 3.0.3
info:
  title: CEC USER API Documentation
  version: 1.0.12
tags:
- name: 2. 게시판 / 댓글
paths:
  /api/comments:
    get:
      tags:
      - 2. 게시판 / 댓글
      summary: 댓글 목록 조회
      operationId: getComments
      parameters:
      - name: type
        in: query
        description: BOARD, NOTICE, INQUIRY 중 1
        required: false
        schema:
          type: string
          enum:
          - ID
      - name: targetId
        in: query
        description: 대댓글 대상
        required: false
        schema:
          type: integer
      - name: sortBy
        in: query
        description: 정렬 기준 (ID(기본값))
        required: false
        schema:
          type: string
          enum:
          - ID
      - name: page
        in: query
        description: 페이지 번호 (기본값 0)
        required: false
        schema:
          type: integer
          description: 페이지 번호 (기본값 0)
          example: 0
        example: 0
      - name: size
        in: query
        description: 페이지당 크기 (기본값 = 10)
        required: false
        schema:
          type: integer
          description: 페이지당 크기 (기본값 = 10)
          example: 10
        example: 10
      - name: sortDirection
        in: query
        description: 정렬 방법
        required: false
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseCommentListResponse'
    post:
      tags:
      - 2. 게시판 / 댓글
      summary: 댓글 작성
      operationId: createComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseLong'
  /api/comments/{id}:
    delete:
      tags:
      - 2. 게시판 / 댓글
      summary: 댓글 삭제
      description: '댓글을 삭제합니다.


        **권한 검증:**

        - 본인이 작성한 댓글만 삭제 가능합니다.

        - 권한이 없는 경우 AccessDeniedException이 발생합니다.


        **삭제 방식:**

        - 현재는 물리적 삭제(완전 삭제)를 수행합니다.

        - 대댓글이 있는 경우에도 완전 삭제됩니다.


        **주의사항:**

        - 삭제된 댓글은 복구할 수 없습니다.

        - 대댓글이 있는 댓글을 삭제하면 대댓글도 고아 상태가 될 수 있습니다.


        **예시 URL:** http://localhost:8080/api/comments/1


        **응답:**

        - 삭제된 댓글의 ID를 반환합니다.

        '
      operationId: deleteComment
      parameters:
      - name: id
        in: path
        description: 댓글 ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseLong'
    patch:
      tags:
      - 2. 게시판 / 댓글
      summary: 댓글 수정
      description: '기존 댓글의 내용을 수정합니다.


        **권한:**

        - 본인이 작성한 댓글만 수정 가능합니다.


        **예시 URL:** http://localhost:8080/api/comments/1

        '
      operationId: updateComment
      parameters:
      - name: id
        in: path
        description: 댓글 ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseLong'
components:
  schemas:
    AuthorResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nickname:
          type: string
        role:
          type: string
          enum:
          - ROLE_USER
          - ROLE_ADMIN
          - ROLE_SUPER_ADMIN
        imageUrl:
          type: string
    CommentRequest:
      required:
      - content
      - targetId
      - targetType
      type: object
      properties:
        content:
          type: string
          description: 댓글 내용
          example: 좋은 글 감사합니다.
        targetType:
          type: string
          description: 댓글 대상 종류
          example: NOTICE
          enum:
          - BOARD
          - NOTICE
          - INQUIRY
        targetId:
          type: integer
          description: 댓글 대상 ID
          format: int64
          example: 1
        parentCommentId:
          type: integer
          description: 부모 댓글 ID
          format: int64
          example: 1
      description: 댓글 생성 요청 DTO
    ApiResponseLong:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: integer
          format: int64
    CommentUpdateRequest:
      type: object
      properties:
        content:
          type: string
      description: 댓글 수정 요청 DTO
    PageableInfo:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
    ApiResponseCommentListResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/CommentListResponse'
    CommentListResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
        pageable:
          $ref: '#/components/schemas/PageableInfo'
    CommentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        targetType:
          type: string
          enum:
          - BOARD
          - NOTICE
          - INQUIRY
        targetId:
          type: integer
          format: int64
        content:
          type: string
        parentCommentId:
          type: integer
          nullable: true
          format: int64
        author:
          $ref: '#/components/schemas/AuthorResponse'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
